---
interface ProjectDetails {
  title: string;
  description: string | string[];
}

interface Props {
  title: string;
  description?: string;
  subtitles?: Record<string, string>;
  tasks: string[];
  details: ProjectDetails[];
  dark?: boolean;
  fullWidthDescription?: boolean;
}

const { title, subtitles, tasks, dark, description, details, fullWidthDescription } = Astro.props;
---

<div class="project-description">
  <a class="link" href="/#work">Back to home</a>
  <div class="content">
    <div class="content-header">
      <h2 class="title">{title}</h2>
      {
        subtitles ? (
          <div class="sub">
            {Object.entries(subtitles).map(([key, value]) => (
              <span>
                <strong>{key}: </strong> {value}
              </span>
            ))}
          </div>
        ) : description ? (
          <div class="sub-description">{description}</div>
        ) : null
      }
      <div class="tasks">
        {
          tasks.map((task) => (
            <span class:list={["task-item", { dark: dark }]}>{task}</span>
          ))
        }
      </div>
    </div>
    <div class:list={["content-details", { 'full-width': fullWidthDescription }]}>
      {
        details.map((detail) => (
          <div class="detail">
            <h3 class="title">{detail.title}</h3>
            {Array.isArray(detail.description) ? detail.description.map((item) => <p class="description">{item}</p>) : <p class="description">{detail.description}</p>}
          </div>
        ))
      }
    </div>
  </div>
</div>

<style>
  .project-description {
    display: flex;
    flex-direction: column;
    row-gap: 10px;
  }
  .project-description .link {
    color: #cfcfcf;
  }
  .project-description .content .content-header {
    display: flex;
    flex-direction: column;
    row-gap: 5px;
  }
  .project-description .content .content-header .sub-description {
    color: #cfcfcf;
  }
  .project-description .content .content-header .sub {
    text-transform: capitalize;
    color: #cfcfcf;
  }
  .project-description .content .content-header .sub span {
    margin-right: 5px;
  }
  .project-description .content .content-header .tasks {
    display: flex;
    column-gap: 16px;
    margin-top: 15px;
    flex-wrap: wrap;
    row-gap: 10px;
  }
  .project-description .content .content-header .tasks .task-item {
    padding: 9px 15px;
    border-radius: 30px;
    font-size: 14px;
    line-height: 20px;
    background-color: #ece8e2;
  }
  .project-description .content .content-header .tasks .task-item.dark {
    background-color: #000;
  }
  .project-description .content .content-details {
    margin-top: 50px;
    display: grid;
    grid-auto-columns: 1fr;
    grid-column-gap: 50px;
    grid-template-rows: auto auto auto;
    grid-template-columns: 1fr 1fr;
  }
  .project-description .content .content-details.full-width {
    grid-template-columns: 1fr;
  }
  .project-description .content .content-details .title {
    font-size: 20px;
    font-weight: 400;
    line-height: 34px;
  }
  .project-description .content .content-details .description {
    margin-bottom: 5px;
    opacity: 0.6;
  }
  @media (max-width: 1023px) {
    .project-description .content .content-details {
      grid-template-columns: 1fr;
      grid-row-gap: 25px;
    }
  }
</style>
